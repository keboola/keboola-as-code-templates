CREATE OR REPLACE TABLE `last_shipping_address` AS
WITH `last_order` AS (
  SELECT
    `customer_id`,
    MAX(`id`) AS `id`
  FROM `order`
  GROUP BY
    1
)
SELECT
  `shipping_address__city`,
  `shipping_address__country`,
  O.`customer_id`
FROM `order` AS O
JOIN `last_order` AS LO
  ON LO.`id` = O.`id`;

/* BDM_CUSTOMERS */
CREATE TABLE `bdm_customers` (
  CUSTOMER_ID STRING NOT NULL,
  CUSTOMER_EMAIL_HASH STRING,
  CUSTOMER_EMAIL STRING,
  CUSTOMER_BILLING_CITY STRING,
  CUSTOMER_BILLING_COUNTRY STRING,
  CUSTOMER_SHIPPING_CITY STRING,
  CUSTOMER_SHIPPING_COUNTRY STRING,
  ORDERS_COUNT_TOTAL INT64,
  TOTAL_SPEND FLOAT64,
  AVG_ORDER_VALUE FLOAT64,
  RECENCY_SCORE STRING,
  DAYS_SINCE_LAST_ORDER INT64,
  FREQUENCY_SCORE STRING,
  ORDERS_COUNT_RFM INT64,
  MONETARY_SCORE STRING,
  SUM_REVENUE FLOAT64,
  FINAL_SCORE STRING,
  SEGMENT STRING,
  SEGMENT_NR INT64,
  FIRST_SUCCEEDED_TRANSACTION_DATE DATE,
  LAST_SUCCEEDED_TRANSACTION_DATE DATE
);

INSERT INTO `bdm_customers`
SELECT
  C.`id` AS CUSTOMER_ID,
  SHA224(C.`email`) AS CUSTOMER_EMAIL_HASH,
  C.`email` AS CUSTOMER_EMAIL,
  C.`default_address__city` AS CUSTOMER_BILLING_CITY,
  C.`default_address__country` AS CUSTOMER_BILLING_COUNTRY,
  LS.`shipping_address__city` AS CUSTOMER_SHIPPING_CITY,
  LS.`shipping_address__country` AS CUSTOMER_SHIPPING_COUNTRY,
  CASE WHEN C.`orders_count` = '' THEN 0 ELSE CAST(C.`orders_count` AS NUMERIC) END AS ORDERS_COUNT_TOTAL,
  CASE WHEN C.`total_spent` = '' THEN 0 ELSE CAST(C.`total_spent` AS NUMERIC) END AS TOTAL_SPEND,
  IF(
    CASE WHEN C.`orders_count` = '' THEN 0 ELSE CAST(C.`orders_count` AS NUMERIC) END = 0
    AND NOT CASE WHEN C.`total_spent` = '' THEN 0 ELSE CAST(C.`total_spent` AS NUMERIC) END IS NULL,
    0,
    CASE WHEN C.`total_spent` = '' THEN 0 ELSE CAST(C.`total_spent` AS NUMERIC) END / CASE WHEN C.`orders_count` = '' THEN 0 ELSE CAST(C.`orders_count` AS NUMERIC) END
  ) AS AVG_ORDER_VALUE,
  R_SCORE AS RECENCY_SCORE,
  R_RAW AS DAYS_SINCE_LAST_ORDER,
  F_SCORE AS FREQUENCY_SCORE,
  F_RAW AS ORDERS_COUNT_RFM,
  M_SCORE AS MONETARY_SCORE,
  M_RAW AS SUM_REVENUE,
  FINAL_SCORE AS FINAL_SCORE,
  SEGMENT AS SEGMENT,
  SEGMENT_NR AS SEGMENT_NR,
  FIRST_SUCCEEDED_TRANSACTION_DATE AS FIRST_SUCCEDED_TRANSACTION_DATE,
  LAST_SUCCEEDED_TRANSACTION_DATE AS LAST_SUCCEDED_TRANSACTION_DATE
FROM `customer` AS C
LEFT JOIN `last_shipping_address` AS LS
  ON LS.`customer_id` = C.`id`
LEFT JOIN `rfm` AS rfm
  ON C.`id` = rfm.CUSTOMER_ID;

/* - try to match customers based on email */
CREATE OR REPLACE TABLE `customer_ids` AS
SELECT DISTINCT
  O.`email` AS EMAIL,
  C.CUSTOMER_ID
FROM `order` AS O
JOIN `bdm_customers` AS C
  ON O.`email` = C.CUSTOMER_EMAIL
QUALIFY
  ROW_NUMBER() OVER (PARTITION BY `email` ORDER BY C.CUSTOMER_ID NULLS LAST) = 1;

/* UPDATE ORDERS */
UPDATE `bdm_orders` AS O SET O.CUSTOMER_ID = C.CUSTOMER_ID
FROM `customer_ids` AS C
WHERE
  O.ORDER_CUSTOMER_EMAIL = C.`EMAIL`;